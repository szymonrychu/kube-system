uid: 1000
gid: 1000

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: rtorrent-external
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication'
  hosts:
    - rtorrent.szymonrichert.pl
  path: /
  tls:
    - secretName: rtorrent-tls
      hosts:
      - rtorrent.szymonrichert.pl
      

persistence:
  config:
    enabled: true
    ## configuration data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    existingClaim: rtorrent-config-local-pvc
    # subPath: config
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false
  data:
    enabled: true
    ## torrents data volume configuration
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    existingClaim: rtorrent-local-pvc
    # accessMode: ReadWriteOnce
    # size: 10Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false